# affinity: {}

annotations: {}

# ## Additional labels to add to all resources
# customLabels: {}

# dnsConfig: {}

# # Extra environment variables that will be passed into the exporter pod
# env: {}

extraArgs:
  - --collect-all

fullnameOverride: ""

image:
  pullPolicy: IfNotPresent
  repository: percona/mongodb_exporter
  tag: "0.40.0"

imagePullSecrets: []

livenessProbe:
  httpGet:
    path: /
    port: metrics
  initialDelaySeconds: 10

# [mongodb[+srv]://][user:pass@]host1[:port1][,host2[:port2],...][/database][?options]
mongodb:
  uri: "mongodb://mongodb_exporter:${mongodb_exporter_password}@mongodb-primary.{namespace}.svc.cluster.local:27017/admin?authSource=admin"

# Name of an externally managed secret (in the same namespace) containing the connection uri as key `mongodb-uri`.
# If this is provided, the value mongodb.uri is ignored.
existingSecret:
  name: ""
  key: "mongodb-uri"

nameOverride: ""

nodeSelector: {}

podAnnotations: {}
#  prometheus.io/scrape: "true"
#  prometheus.io/port: "9216"
#  prometheus.io/path: /metrics

# podLabels: {}

port: "9216"

priorityClassName: ""

readinessProbe:
  httpGet:
    path: /
    port: metrics
  initialDelaySeconds: 10

replicas: 1

affinity:
    nodeAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
                - key: "Database-Services"
                  operator: In
                  values:
                  - "true"

resources:
  limits:
    cpu: 100m
    memory: 200Mi
  requests:
    cpu: 70m
    memory: 100Mi

# Extra environment variables that will be passed into the exporter pod
env: {}

# Volumes that will be mounted into the exporter pod
volumeMounts: []

# Volumes that will be attached to the exporter deployment
volumes: []

securityContext:
  allowPrivilegeEscalation: true
  capabilities:
    drop: ["all"]
  readOnlyRootFilesystem: true
  runAsGroup: 10000
  runAsNonRoot: true
  runAsUser: 10000

service:
  labels: {}
  annotations: {}
  port: 9216
  type: ClusterIP
  # portName: metrics

serviceAccount:
  create: true
  # If create is true and name is not set, then a name is generated using the
  # fullname template.
  name:

serviceMonitor:
  enabled: true
  interval: 30s
  scrapeTimeout: 10s
  namespace: "${service_monitor_namespace}"
  additionalLabels:
    release: prometheus-operator
  targetLabels: {}
  metricRelabelings: []
  # scheme: ""
  # tlsConfig: {}

tolerations: []

# # Volumes that will be attached to the exporter deployment
# volumes: []

# # Volumes that will be mounted into the exporter pod
# volumeMounts: []
